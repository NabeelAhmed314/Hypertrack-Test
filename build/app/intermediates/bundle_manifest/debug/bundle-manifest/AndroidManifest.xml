<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.hypertrack.quickstartflutter"
    android:versionCode="1"
    android:versionName="1.0.0" >

    <uses-sdk
        android:minSdkVersion="19"
        android:targetSdkVersion="28" />
    <!--
         Flutter needs it to communicate with the running application
         to allow setting breakpoints, to provide hot reload, etc.
    -->
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="com.google.android.gms.permission.ACTIVITY_RECOGNITION" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.ACTIVITY_RECOGNITION" />
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />
    <uses-permission android:name="android.permission.WAKE_LOCK" /> <!-- Required by older versions of Google Play services to create IID tokens -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    <!--
 io.flutter.app.FlutterApplication is an android.app.Application that
         calls FlutterMain.startInitialization(this); in its onCreate method.
         In most cases you can leave this as-is, but you if you want to provide
         additional functionality it is fine to subclass or reimplement
         FlutterApplication and put your custom class here.
    -->
    <application
        android:name="io.flutter.app.FlutterApplication"
        android:allowBackup="true"
        android:appComponentFactory="androidx.core.app.CoreComponentFactory"
        android:debuggable="true"
        android:fullBackupContent="@xml/hypertrack_sdk_backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="quickstartflutter" >
        <service android:name="com.hypertrack.sdk.service.HyperTrackSDKService" />

        <activity
            android:name="com.hypertrack.quickstartflutter.MainActivity"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:windowSoftInputMode="adjustResize" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <intent-filter>
                <action android:name="FLUTTER_NOTIFICATION_CLICK" />

                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </activity>
        <!--
             Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java
        -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />

        <activity
            android:name="com.hypertrack.sdk.permissions.PermissionsRequestActivity"
            android:theme="@style/HyperTrackActivityThemeTransparent" />

        <receiver
            android:name="com.hypertrack.sdk.service.HyperTrackSDKFirebaseMessageReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.hypertrack.sdk.service.activity.TransitionBroadcastReceiver"
            android:permission="com.google.android.gms.permission.ACTIVITY_RECOGNITION" />
        <receiver
            android:name="com.hypertrack.sdk.service.activity.ActivityRecognitionBroadcastReceiver"
            android:permission="com.google.android.gms.permission.ACTIVITY_RECOGNITION" />
        <receiver
            android:name="com.hypertrack.sdk.service.health.receivers.BatteryEventReceiver"
            android:enabled="true"
            android:exported="false" />
        <receiver
            android:name="com.hypertrack.sdk.service.health.receivers.BootEventReceiver"
            android:enabled="true"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
                <!-- <action android:name="android.intent.action.ACTION_SHUTDOWN" /> -->
                <!-- Starting from Android P shutdown receivers should be registered dynamically -->
            </intent-filter>
        </receiver>
        <receiver
            android:name="com.hypertrack.sdk.service.health.receivers.HTOtherHealthEventsReceiver"
            android:enabled="true"
            android:exported="false" />
        <receiver
            android:name="com.hypertrack.sdk.service.health.receivers.LocationProviderStateBroadcastReceiver"
            android:enabled="true"
            android:exported="false" >
        </receiver>

        <provider
            android:name="com.hypertrack.sdk.utils.HyperTrackInitProvider"
            android:authorities="com.hypertrack.quickstartflutter.HyperTrackInitProvider"
            android:exported="false" />
        <!--
             FirebaseMessagingService performs security checks at runtime,
             but set to not exported to explicitly avoid allowing another app to call it.
        -->
        <service
            android:name="com.google.firebase.messaging.FirebaseMessagingService"
            android:exported="false" >
            <intent-filter android:priority="-500" >
                <action android:name="com.google.firebase.MESSAGING_EVENT" />
            </intent-filter>
        </service>
        <service
            android:name="com.google.firebase.components.ComponentDiscoveryService"
            android:exported="false" >
            <meta-data
                android:name="com.google.firebase.components:com.google.firebase.iid.Registrar"
                android:value="com.google.firebase.components.ComponentRegistrar" />
        </service>

        <receiver
            android:name="com.google.firebase.iid.FirebaseInstanceIdReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </receiver>

        <provider
            android:name="com.google.firebase.provider.FirebaseInitProvider"
            android:authorities="com.hypertrack.quickstartflutter.firebaseinitprovider"
            android:exported="false"
            android:initOrder="100" />

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <provider
            android:name="androidx.lifecycle.ProcessLifecycleOwnerInitializer"
            android:authorities="com.hypertrack.quickstartflutter.lifecycle-process"
            android:exported="false"
            android:multiprocess="true" />
    </application>

</manifest>